name: "Prototype Groups"
on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Check"]
    types:
      - completed
  push:
    branches:
      - main

concurrency:
  group: "canvas-update"
  cancel-in-progress: false

jobs:
  validate:
    name: "Validate"
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}

    permissions:
      contents: read
      actions: read
      issues: write
      pull-requests: write

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Compile TypeScript sources
        uses: ./.github/actions/build

      - name: Delete existing groups.json
        if: github.event_name == 'workflow_run'
        run: |
          echo "${{ toJson(github.event.workflow_run) }}"
          rm ./config/groups.json

      - name: Download PR artifact
        if: github.event_name == 'workflow_run'
        uses: actions/download-artifact@v4
        with:
          name: groups.json
          path: ./config/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate configuration
        run: npm run validate
        env:
          CANVAS_TOKEN: ${{ secrets.CANVAS_TOKEN }}

      - name: "Post changes as PR comment"
        if: github.event_name == 'workflow_run'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let fs = require('fs');
            let markdown = 'changes.md';
            let issue_number = ${{ github.event.workflow_run.pull_requests[0].id }};

            if (fs.existsSync(markdown)) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue_number,
                body: fs.readFileSync('changes.md', 'utf-8')
              });
            }
